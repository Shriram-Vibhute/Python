# -*- coding: utf-8 -*-
"""week-2-interview-questions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/198UqZ59bcyluNKgIyw9K20uToSaHSjT5

| Question No. | Question |
| :--: | :-- |
| 1 | What is aliasing?  |
| 2 | What is garbage collection?  |
| 3 | What is mutability and why is it dangerous in certain scenarios? |
| 4 | What is cloning? |
| 5 | Differentiate between deep and shallow copies |
| 6 | How nested lists are stored in memory? |
| 7 | How strings are stored in memory |
| 8 | Why tuples take less memory than lists? |
| 9 | How set index position is decided? |
| 10 | Why mutable types are not allowed in sets/dicts |
"""

a = 4

id(a)

id(4)

hex(11126784)

a = 4
b = a

print(id(a))
print(id(b))

c = b

print(id(c))

del a

a

print(b)

del b
print(c)

a = 'DSMP 2022-23'
b = a
c = b

import sys
sys.getrefcount('DSMP 2022-23')

L = [1,2,3]
print(id(L))

L.append(4)
print(L)
print(id(L))

T = (1,2,3)
print(id(T))

T = T + (4,)

print(T)
print(id(T))

a = [1,2,3]
b = a

b.append(4)
print(b)

print(a)

def func(data):
  data.append(4)

a = [1,2,3]
func(a[:])
print(a)

a = [1,2,3]
# cloning
b = a[:]

id(a)

id(b)

b.append(4)
b

a

a = {'name':'nitish','age':33}
# aliasing->cloning
b = a.copy()

b['gender'] = 'male'

print(b)
print(a)

a = [1,2,3]
# shallow
b = a.copy()

b.append(4)

print(a)
print(b)

a = [1,2,3,[4,5]]
a

print(id(a[-1]))
print(id(b[-1]))

b = a.copy()
b

print(id(a))
print(id(b))

b[-1][0] = 400
print(b)

a

import copy

a = [1,2,3,[4,5]]
a

b = a[:]
b

b[-1][0] = 400
b

a

print(id(a[-1]))
print(id(b[-1]))

# [:] -> shallow copy

s = 'hello'

id(s)

id(s[0])

id('h')

{12,}